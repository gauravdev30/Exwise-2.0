{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-otp-input/fesm2020/ngx-otp-input.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, Directive, Input, HostListener, EventEmitter, Component, ChangeDetectionStrategy, ViewChildren, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { UntypedFormArray, UntypedFormControl, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"otpInputElement\"];\nfunction NgxOtpInputComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"label\")(2, \"input\", 3, 4);\n    i0.ɵɵlistener(\"keyup\", function NgxOtpInputComponent_div_1_Template_input_keyup_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r2 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.handleKeyUp(i_r2, $event.key));\n    })(\"keyup.backspace\", function NgxOtpInputComponent_div_1_Template_input_keyup_backspace_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r2 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.handleDelete(i_r2));\n    })(\"keyup.arrowLeft\", function NgxOtpInputComponent_div_1_Template_input_keyup_arrowLeft_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r2 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.stepBackward(i_r2));\n    })(\"keyup.arrowRight\", function NgxOtpInputComponent_div_1_Template_input_keyup_arrowRight_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r2 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.stepForward(i_r2));\n    })(\"focus\", function NgxOtpInputComponent_div_1_Template_input_focus_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r2 = restoredCtx.index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.handleFocus(i_r2));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const control_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.otpConfig.classList == null ? null : ctx_r0.otpConfig.classList.inputBox);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabels[i_r2]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"ngx-otp-input-\" + i_r2)(\"formControl\", control_r1)(\"ngxOtpPattern\", ctx_r0.otpConfig.pattern)(\"type\", ctx_r0.otpConfig.isPasswordInput ? \"password\" : \"text\")(\"ngClass\", (ctx_r0.styles == null ? null : ctx_r0.styles.length) > 0 ? ctx_r0.styles[i_r2] : null);\n  }\n}\nvar NgxOtpBehavior;\n(function (NgxOtpBehavior) {\n  NgxOtpBehavior[NgxOtpBehavior[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  NgxOtpBehavior[NgxOtpBehavior[\"LEGACY\"] = 1] = \"LEGACY\";\n})(NgxOtpBehavior || (NgxOtpBehavior = {}));\nclass NgxOtpInputService {\n  init2DArray(size) {\n    return new Array(size).fill(new Array());\n  }\n  toArray(value) {\n    return Array.isArray(value) ? value : [value];\n  }\n  addItemToAll(source, items) {\n    if (source?.length > 0) {\n      return source.map(entry => entry.concat(items));\n    }\n  }\n  removeItemFromAll(source, items) {\n    if (source?.length > 0) {\n      return source.map(entry => entry.filter(item => !items.includes(item)));\n    }\n  }\n  addItemAtIndex(source, index, items) {\n    if (source?.length > 0) {\n      source[index] = source[index].concat(items);\n      return source;\n    }\n  }\n  removeItemAtIndex(source, index, items) {\n    if (source?.length > 0) {\n      source[index] = source[index].filter(item => !items.includes(item));\n      return source;\n    }\n  }\n}\nNgxOtpInputService.ɵfac = function NgxOtpInputService_Factory(t) {\n  return new (t || NgxOtpInputService)();\n};\nNgxOtpInputService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgxOtpInputService,\n  factory: NgxOtpInputService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxOtpInputService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass PatternDirective {\n  constructor() {\n    // allowed keys apart from numeric characters\n    this.allowedKeys = ['Backspace', 'ArrowLeft', 'ArrowRight', 'Escape', 'Tab'];\n  }\n  onKeyDown(e) {\n    if (this.allowedKeys.includes(e.key) || e.code === 'KeyA' && e.ctrlKey === true ||\n    // Allow: Ctrl+A\n    e.code === 'KeyC' && e.ctrlKey === true ||\n    // Allow: Ctrl+C\n    e.code === 'KeyV' && e.ctrlKey === true ||\n    // Allow: Ctrl+V\n    e.code === 'KeyX' && e.ctrlKey === true ||\n    // Allow: Ctrl+X\n    e.code === 'KeyA' && e.metaKey === true ||\n    // Cmd+A (Mac)\n    e.code === 'KeyC' && e.metaKey === true ||\n    // Cmd+C (Mac)\n    e.code === 'KeyV' && e.metaKey === true ||\n    // Cmd+V (Mac)\n    e.code === 'KeyX' && e.metaKey === true // Cmd+X (Mac)\n    ) {\n      return; // let it happen, don't do anything\n    } else if (!this.pattern.test(e.key)) {\n      e.preventDefault();\n    }\n  }\n}\nPatternDirective.ɵfac = function PatternDirective_Factory(t) {\n  return new (t || PatternDirective)();\n};\nPatternDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PatternDirective,\n  selectors: [[\"\", \"ngxOtpPattern\", \"\"]],\n  hostBindings: function PatternDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function PatternDirective_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    pattern: [i0.ɵɵInputFlags.None, \"ngxOtpPattern\", \"pattern\"]\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PatternDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxOtpPattern]'\n    }]\n  }], null, {\n    pattern: [{\n      type: Input,\n      args: ['ngxOtpPattern']\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\nclass NgxOtpInputComponent {\n  constructor(ngxOtpInputService, ref) {\n    this.ngxOtpInputService = ngxOtpInputService;\n    this.ref = ref;\n    this.ngxOtpArray = new UntypedFormArray([]);\n    this.ariaLabels = [];\n    this.styles = [];\n    this.otpConfig = {\n      otpLength: 6,\n      autofocus: true,\n      autoblur: true,\n      behavior: NgxOtpBehavior.DEFAULT\n    };\n    this.defaultPattern = /^\\d+$/;\n    this.DEFAULT_ARIA_LABEL = 'One time password input';\n    this.isNgxOtpArrayDisabled = false;\n    this.focusedInputHasValue = false;\n    this.otpChange = new EventEmitter();\n    this.fill = new EventEmitter();\n  }\n  onPaste(event) {\n    event.preventDefault();\n    this.handlePaste(event.clipboardData.getData('text'));\n  }\n  set disable(isDisabled) {\n    this.handleDisable(isDisabled);\n    this.isNgxOtpArrayDisabled = isDisabled;\n  }\n  set config(c) {\n    this.otpConfig = {\n      ...this.otpConfig,\n      ...c\n    };\n    if (this.otpConfig.classList?.input) {\n      this.setInitialStyles();\n    }\n    if (!c.pattern) {\n      this.otpConfig.pattern = this.defaultPattern;\n    }\n  }\n  set status(status) {\n    this.handleStatusChange(status);\n  }\n  ngOnInit() {\n    this.setUpOtpForm();\n    this.setUpAriaLabels();\n    this.LAST_INPUT_INDEX = this.otpConfig.otpLength - 1;\n    this.otpFormChangeListener();\n  }\n  ngAfterViewInit() {\n    this.setNativeHTMLElements();\n    this.setInitialFocus();\n    this.setNumericInputIfPossible();\n    this.handleDisable(this.isNgxOtpArrayDisabled);\n  }\n  ngOnDestroy() {\n    this.ngxOtpArray$.unsubscribe();\n  }\n  clear() {\n    this.removeStyleFromAll(this.otpConfig.classList?.inputFilled);\n    this.ngxOtpArray.reset();\n    this.ref.detectChanges();\n    if (this.otpConfig.autofocus) {\n      this.setFocus(0);\n    }\n  }\n  handleKeyUp(index, value) {\n    if (this.otpConfig.pattern.test(value) && value !== 'Backspace') {\n      this.addStyle(index, this.otpConfig.classList?.inputFilled);\n      if (!this.ngxOtpArray.valid) {\n        this.getFormControlByIndex(index).setValue(value);\n        this.stepForward(index);\n      } else {\n        this.blur();\n      }\n    }\n  }\n  handleDelete(index) {\n    this.removeStyle(index, this.otpConfig.classList?.inputFilled);\n    if (this.otpConfig.behavior === NgxOtpBehavior.LEGACY && !this.focusedInputHasValue || this.otpConfig.behavior !== NgxOtpBehavior.LEGACY) {\n      this.stepBackward(index);\n    } else {\n      this.focusedInputHasValue = false;\n    }\n  }\n  handleFocus(index) {\n    this.focusedInputHasValue = !!this.ngxOtpArray.controls[index].value;\n    if (this.otpConfig.behavior === NgxOtpBehavior.LEGACY && this.focusedInputHasValue) {\n      this.inputs[index].select();\n    }\n  }\n  stepBackward(index) {\n    if (index > 0) {\n      this.setFocus(index - 1);\n    }\n  }\n  stepForward(index) {\n    if (index < this.LAST_INPUT_INDEX) {\n      this.setFocus(index + 1);\n    }\n  }\n  otpFormChangeListener() {\n    this.ngxOtpArray$ = this.ngxOtpArray.valueChanges.subscribe(values => {\n      this.otpChange.emit(values);\n      if (this.ngxOtpArray.valid) {\n        this.fill.emit(values.join(''));\n      }\n    });\n  }\n  setUpOtpForm() {\n    for (let i = 0; i < this.otpConfig.otpLength; i++) {\n      this.ngxOtpArray.push(new UntypedFormControl(null, [Validators.required]));\n    }\n  }\n  setUpAriaLabels() {\n    const labels = this.otpConfig.ariaLabels;\n    this.ariaLabels = Array.isArray(labels) ? labels : new Array(this.otpConfig.otpLength).fill(labels || this.DEFAULT_ARIA_LABEL);\n  }\n  setNativeHTMLElements() {\n    this.inputs = this.otpInputElements.map(element => element.nativeElement);\n  }\n  setInitialFocus() {\n    if (this.otpConfig.autofocus) {\n      this.setFocus(0);\n    }\n  }\n  setInitialStyles() {\n    this.styles = this.ngxOtpInputService.init2DArray(this.otpConfig.otpLength);\n    this.addStyleToAll(this.otpConfig.classList.input);\n  }\n  setFocus(index) {\n    this.inputs[index].focus();\n  }\n  setNumericInputIfPossible() {\n    if (this.otpConfig.numericInputMode) {\n      this.otpConfig.pattern = this.defaultPattern;\n      this.inputs.map(element => {\n        element.setAttribute('inputmode', 'numeric');\n        element.setAttribute('pattern', '[0-9]*');\n      });\n    }\n  }\n  blur() {\n    if (this.otpConfig.autoblur) {\n      this.inputs.map(input => input.blur());\n    }\n  }\n  handlePaste(value) {\n    if (this.otpConfig.pattern.test(value)) {\n      let lastIndex = 0;\n      value.split('').slice(0, this.otpConfig.otpLength).map((character, index) => {\n        this.addStyle(index, this.otpConfig.classList?.inputFilled);\n        this.getFormControlByIndex(index).setValue(character);\n        lastIndex = index;\n      });\n      if (this.ngxOtpArray.valid) {\n        this.blur();\n      } else {\n        this.setFocus(lastIndex + 1);\n      }\n    }\n  }\n  handleDisable(isDisabled) {\n    if (isDisabled) {\n      this.ngxOtpArray.disable();\n      this.addStyleToAll(this.otpConfig.classList?.inputDisabled);\n    } else {\n      this.ngxOtpArray.enable();\n      this.removeStyleFromAll(this.otpConfig.classList?.inputDisabled);\n    }\n  }\n  handleStatusChange(status) {\n    this.removeStyleFromAll([...this.ngxOtpInputService.toArray(this.otpConfig.classList?.inputSuccess), ...this.ngxOtpInputService.toArray(this.otpConfig.classList?.inputError)]);\n    if (status) {\n      if (status === 'success') {\n        this.addStyleToAll(this.otpConfig.classList?.inputSuccess);\n      } else if (status === 'error') {\n        this.addStyleToAll(this.otpConfig.classList?.inputError);\n      }\n    }\n  }\n  getFormControlByIndex(index) {\n    return this.ngxOtpArray.controls[index];\n  }\n  addStyle(index, styles) {\n    this.styles = this.ngxOtpInputService.addItemAtIndex(this.styles, index, this.ngxOtpInputService.toArray(styles));\n  }\n  addStyleToAll(styles) {\n    this.styles = this.ngxOtpInputService.addItemToAll(this.styles, this.ngxOtpInputService.toArray(styles));\n  }\n  removeStyle(index, styles) {\n    this.styles = this.ngxOtpInputService.removeItemAtIndex(this.styles, index, this.ngxOtpInputService.toArray(styles));\n  }\n  removeStyleFromAll(styles) {\n    this.styles = this.ngxOtpInputService.removeItemFromAll(this.styles, this.ngxOtpInputService.toArray(styles));\n  }\n}\nNgxOtpInputComponent.ɵfac = function NgxOtpInputComponent_Factory(t) {\n  return new (t || NgxOtpInputComponent)(i0.ɵɵdirectiveInject(NgxOtpInputService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nNgxOtpInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxOtpInputComponent,\n  selectors: [[\"ngx-otp-input\"]],\n  viewQuery: function NgxOtpInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.otpInputElements = _t);\n    }\n  },\n  hostBindings: function NgxOtpInputComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"paste\", function NgxOtpInputComponent_paste_HostBindingHandler($event) {\n        return ctx.onPaste($event);\n      });\n    }\n  },\n  inputs: {\n    disable: \"disable\",\n    config: \"config\",\n    status: \"status\"\n  },\n  outputs: {\n    otpChange: \"otpChange\",\n    fill: \"fill\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ngx-otp-input-container\", 3, \"ngClass\"], [\"class\", \"ngx-otp-input-box\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngx-otp-input-box\", 3, \"ngClass\"], [\"maxlength\", \"1\", \"autocapitalize\", \"off\", \"spellcheck\", \"false\", 1, \"ngx-otp-input\", 3, \"id\", \"formControl\", \"ngxOtpPattern\", \"type\", \"ngClass\", \"keyup\", \"keyup.backspace\", \"keyup.arrowLeft\", \"keyup.arrowRight\", \"focus\"], [\"otpInputElement\", \"\"]],\n  template: function NgxOtpInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵtemplate(1, NgxOtpInputComponent_div_1_Template, 4, 7, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.otpConfig.classList == null ? null : ctx.otpConfig.classList.container);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.ngxOtpArray.controls);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormControlDirective, i2.NgForm, i3.NgClass, i3.NgForOf, PatternDirective],\n  styles: [\".ngx-otp-input-container[_ngcontent-%COMP%]{display:flex}.ngx-otp-input-box[_ngcontent-%COMP%]{margin:0 5px}.ngx-otp-input-box[_ngcontent-%COMP%]:first-child{margin-left:0}.ngx-otp-input-box[_ngcontent-%COMP%]:last-child{margin-right:0}.ngx-otp-input[_ngcontent-%COMP%]{width:35px;height:35px;text-align:center;font-size:1.25rem;border:1px solid #212121;border-radius:4px;outline:0}.ngx-otp-input-disabled[_ngcontent-%COMP%]{opacity:.3}\"],\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxOtpInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-otp-input',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<form\\n  [ngClass]=\\\"otpConfig.classList?.container\\\"\\n  class=\\\"ngx-otp-input-container\\\"\\n>\\n  <div\\n    *ngFor=\\\"let control of ngxOtpArray.controls; let i = index\\\"\\n    [ngClass]=\\\"otpConfig.classList?.inputBox\\\"\\n    class=\\\"ngx-otp-input-box\\\"\\n  >\\n    <label [attr.aria-label]=\\\"ariaLabels[i]\\\">\\n      <input\\n        #otpInputElement\\n        [id]=\\\"'ngx-otp-input-' + i\\\"\\n        [formControl]=\\\"control\\\"\\n        [ngxOtpPattern]=\\\"otpConfig.pattern\\\"\\n        [type]=\\\"otpConfig.isPasswordInput ? 'password' : 'text'\\\"\\n          [ngClass]=\\\"styles?.length > 0 ? styles[i] : null\\\"\\n        (keyup)=\\\"handleKeyUp(i, $event.key)\\\"\\n        (keyup.backspace)=\\\"handleDelete(i)\\\"\\n        (keyup.arrowLeft)=\\\"stepBackward(i)\\\"\\n        (keyup.arrowRight)=\\\"stepForward(i)\\\"\\n        (focus)=\\\"handleFocus(i)\\\"\\n        class=\\\"ngx-otp-input\\\"\\n        maxlength=\\\"1\\\"\\n        autocapitalize=\\\"off\\\"\\n        spellcheck=\\\"false\\\"\\n      />\\n    </label>\\n  </div>\\n</form>\\n\",\n      styles: [\".ngx-otp-input-container{display:flex}.ngx-otp-input-box{margin:0 5px}.ngx-otp-input-box:first-child{margin-left:0}.ngx-otp-input-box:last-child{margin-right:0}.ngx-otp-input{width:35px;height:35px;text-align:center;font-size:1.25rem;border:1px solid #212121;border-radius:4px;outline:0}.ngx-otp-input-disabled{opacity:.3}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgxOtpInputService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    otpInputElements: [{\n      type: ViewChildren,\n      args: ['otpInputElement']\n    }],\n    otpChange: [{\n      type: Output\n    }],\n    fill: [{\n      type: Output\n    }],\n    onPaste: [{\n      type: HostListener,\n      args: ['paste', ['$event']]\n    }],\n    disable: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    status: [{\n      type: Input\n    }]\n  });\n})();\nclass NgxOtpInputModule {}\nNgxOtpInputModule.ɵfac = function NgxOtpInputModule_Factory(t) {\n  return new (t || NgxOtpInputModule)();\n};\nNgxOtpInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxOtpInputModule,\n  declarations: [NgxOtpInputComponent, PatternDirective],\n  imports: [ReactiveFormsModule, FormsModule, CommonModule],\n  exports: [NgxOtpInputComponent]\n});\nNgxOtpInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [NgxOtpInputService],\n  imports: [ReactiveFormsModule, FormsModule, CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxOtpInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxOtpInputComponent, PatternDirective],\n      imports: [ReactiveFormsModule, FormsModule, CommonModule],\n      exports: [NgxOtpInputComponent],\n      providers: [NgxOtpInputService]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-otp-input\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxOtpBehavior, NgxOtpInputComponent, NgxOtpInputModule };\n"],
  "mappings": "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",
  "names": ["NgxOtpBehavior"]
}
